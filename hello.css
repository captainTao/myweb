question:
1.margin-left和left的区别？
a.left/right/bottom/top生效的前提是必须设置父容器position:absolute或relative
b.如果父容器没有设置postion，则会一直往上找，如果没找到就不生效；
c.而margin-left就会以父容器为基准，不管是否设置了postion;

2.position几个参数的用法？
a.都是通过left,right,bottom,top来定位
b.absolute:相对于static定位以外的第一个父元素定位；
c.fix:相对于浏览器窗口定位，如漂浮的广告；
d.relative:相对于正常位置定位；
e.static:默认值
f.inherit:继承父元素值
g.sticky:粘性定位

https://blog.csdn.net/bymyself11/article/details/52055806
（父级元素的属性必须为relative,而父级内部的元素某个位置最好用absolute,因为不受父级元素padding的影响；当然也可以用relative）

3.float:中清除浮动参数的意义？
clear:both;  // 图像的左右测均不允许出现浮动元素；

4.margin参数为负数的用法：
a.当元素不存在width属性或者（width：auto）的时候，负margin-left会增加元素的宽度
b.margin-top为负值不会增加高度，只会产生向上位移
c.margin-bottom为负值不会产生位移，会减少自身的供css读取的高度
d.对文档的影响就是，后面的文字会自动补位，紧贴元素之后；
e.对浮动元素的影响：会移动其位置；
应用：
双飞翼：
referto : https://www.jianshu.com/p/549aaa5fabaa


网页服务器的端口一般为80

5.在大的盒子中画一个小盒子？
嵌套div，写好每个div的margin,size;

6.设置不可见
visiblity:hidden;  元素隐藏占位置
display:none; 元素隐藏不占位置
overflow:hidden; 将超出部分的元素隐藏

7.css网络优化，精灵图，滑动门，ement快捷键

+-----------------------------------------------------------------------------

<link rel="stylesheet" type="text/css" href="mystyle.css">

<style type="text/css">
    table,tr,td{
        border: 1px solid green;
        border-collapse:collapse;/*I am annotation*/
    }
</style>

<h1 style="color:pink">内联样式</h1>
<h6 style="color:green; margin-left:10px">welcome to the www.h5.cn</h6>

<div style="border:3px solid green"></div>

<table width = "400px" height = "100px" bgcolor="green" align="center" cellspacing="1"></table>
+-----------------------------------------------------------------------------



css样式：
//////////////////////////////////////////////////////////////////////////////////////////////////

font
/***********************************/
设置颜色：
div{
	color:#00ff00;
	color:rgb(255,255,30);
	background-color:rgba(255,0,0,0.5);  /*a为透明度*/
}


*{属性:值;}  /*  *代表所有标签，那么会给所有标签加上这个样式 */


font-size:  浏览器默认为16px;
line-height: 默认为18px;
font-family:微软雅黑;   // 直接写中文名字
font-family:Microsoft YaHei; // 写英文名字， 或者unicode编码

console控制台获取unicode
escape('宋体')
"%u5B8B%u4F53"


Font-style:设置文字的斜体。
Italic   斜体s
normal  正常
line-height   行高  // 行高=文字大小+上边距+下边距,value可以为：40px|2em|120%|2

浏览器默认
line-height:18px;
font-size:16px;

font的连写：
文字大小和字体不能缺少，其余跟需求写；

{font: font-style font-weight:(bold/normal);  font-size/line-height  font-family;}
.p-weight{
	font:italic 700 40px/80px 微软雅黑;
}


属性选择器
/***********************************/
1.交集选择器：（中间不能有空格）
h3.class{
	color: orange;
	font-size: 10px;
}

2.父与子连写：（中间有空格，包含关系）无隔代限制
/*两个或者两个以上的选择器写在一起；
  必须是包含关系，父在前，子在后；
*/
.father #son1 a {font-size: 30px;}


3.父子标签：(包含关系，必须是父与子，与JQ一致)
div>p{
	color: green;
}


4.不同的选择器写在一起：（并集选择器）
.one, .two, span{
	color: orange;
	font-size: 30px;
}

5.属性选择器：
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<style type="text/css">
		input[type][id=id1]{    /*input为标签，后面括号为属性*/
			color:red;
		}
	</style>
</head>
<body>
	<input type="text" value="123">
	<input type="button" value="提交" id="id1">
</body>
</html>


元素之间的转换：
/***********************************/
Display: inline			    将元素转化为行内元素
Display：inline-block	    将元素转化行内块元素
Display: block				将元素转化为块元素

Dispaly: none;

1.块元素
div,h1-h6,p,ol,ul,dl,table,address,blockquote,form.....
特点：
※独占一行
※可以设置宽高
※宽度是父集元素的宽度（嵌套关系）


2.行内元素
a,span,i,strong,em,br,q,var,cite,code,label,pre,kbd,samp,dfn........

<p><cite>The Scream</cite> by Edward Munch. Painted in 1893.</p>// cite是引用标签，引用文献之类的，会以斜体展示出来；
<dfn>定义项目</dfn><br>
<code>一段电脑代码</code><br>
<samp>计算机样本</samp><br>
<kbd>键盘输入</kbd><br>
<var>变量</var>  // 变量标签
特点：
※所有的行内元素在一行上显示
※不能设置宽高
※宽度就是元素内容宽度

3.行内块元素
img,input
特点:
※能设置宽高
※在一行上显示


css规范
/***********************************/
1.行内元素尽量里面包含行类元素
2.有些块元素不能包含其他块级元素，比如p,h中不能包含div


css伪类：
/***********************************/
a:link{}
a:visited{}
a:hover{}|
a:active{}
a:focus{} /*获取焦点*/

p:first-child{}


background
/***********************************/
text-decoration: None|underline|line-through
text-index:1em; 文字的缩进距离
/*比如给每一行的列表前面添加一个图片的时候*/
ul li{
	 list-style: none; /*清除列表前字符显示*/
	 background:url(li.gif) no-repeat  left 4px;  /*或者常用left center； 或者直接用px: 9px 7px*/
     text-indent:1em;
}

// 背景样式：

div{
	background-color: #ffffff;  /*背景颜色会影响到padding，也会影响到border. 但不会影响到margin; */
	background-image: url("../png");  /*设置背景图片一定要设置宽度和高度*/
	width: 800px;
	height: 600px;
	background-repeat: repeat|repeat-x|repeat-y|no-repeat; /*默认值为repeat*/
	background-position: 30px 40px; /*第一个值是水平方向，第二个是垂直方向*/center cnter/ top right/ 
	background-position: top right; /*设置背景图从何处开始展示；只写一个值时，另外一个值默认居中*/
	background-attachment: scroll|fixed; /*设置背景是否滚动*/
}
比如设置search框中的图标，可以设置background: url("serch.jpg") no-repeat right ;

设置精灵图： 
backgroud:url("../png") -900px -300px;

如果要设置两个背景，则多设置一个span标签，再分别设置a,span标签的背景;
设置hover的背景
li a:hover
li a:hover span  

<ul>
    <li><a href=""><span></span></a></li>
    <li><a href=""><span></span></a></li>
</ul>

ul{
	list-style: none; /*去掉列表前的原点显示*/
}

设置li项目前面的图标：
li{ 
	/*清除列表项符号*/
	list-style: none;
	background: url("li.gif") no-repeat left center;
	text-indent:1em;
}


样式优先级：
/***********************************/

行内样式 > 页内样式 > 外部引用样式 > 浏览器默认样式
important > 内联 > ID > 伪类|类 | 属性选择  > 标签  > 伪对象 >  通配符 > 继承


继承：文字颜色，文字大小，字体，行高，字体相关
不能继承： <a href=..></a> <h1></h1>，边框，外内边距，盒子相关属性

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<style type="text/css">
	#con{
		color: pink;
		font-size:100px;
		}
		
	.box{
		color:green;
		font-size: 60px;
		}

	div{
		color:red !important; /*!important的优先级是最高的 > 内联 > id > class >标签*/
		font-size:60px !important;
	}	
	</style>
</head>
<body>
	<div class="box" id="con" style="font-size:12px; color:yellow;">14期威武</div>
</body>
</html>


padding，margin,border
/***********************************/
padding:内边距
margin:外边距
1.都有后缀可以带:left, right, top, bottom;
2.也可以直接带 1(所有距离一样)/ 2（上下，左右）/ 3(上，左右，下) / 4（上，右，下，左；顺时针）个参数：
#div1{
	padding-left: 10px;
	margin-right: 20px;
	overflow: hidden; //给外边的大盒子设置溢出的时候，隐藏,是对大盒子写此属性
}

margin: 20px;（上、下、左、右各20px。）
margin: 20px 40px;（上、下20px；左、右40px。）
margin: 20px 40px 60px;（上20px；左、右40px；下60px。）
margin: 20px 40px 60px 80px;（上20px；右40px；下60px；左80px。）


margin-left:auto 让盒子左侧充满
margin-right:auto 让盒子右侧充满
margin:0 auto


vertical-align:middle 让行内，行内块元素设置垂直距离
vertical-align:middle  常与 display:inline-block 配合使用， 表格对此属性最敏感
vertical-align:middle 只有在 display:inline-block/inline/table-cell才会生效

让文字在一个div中居中，除了设置margin-top(文字如果用p标签无效，用div括起来)之外，还可以设置line-height跟div的高度保持一致；

border:
border-width
border-style:solid,dotted,dashed,..
border-color
border-right,border-top,border-left,border-bottom
border:0 none; // 0是0像素，none是内存不渲染

border-collapse: collapse; //设置表格边框合并；可以去掉单元格之间的间隙；

table{
	 width:300px;
	 height:300px;
	 border:1px solid red;
	 border-collapse:collapse;  /* 合并单元格, */除此之外还可以用cellspacing
	}

<table cellpadding="0" cellspacing="0"> // cellpadding和cellspacing是table的属性，不是样式；所以在style中写无效；

.list li{
	border-bottom:1px dashed #666666; /*设置每个选项的下划线为虚线*/类似还有border-right,border-top,border-left
}

input[class="username"]{
	 border:#979090 dashed 1px;
	 background-color:#C0BFE8;	 
	 outline-style:none;  /* 去掉外边框轮廓线 */
}

*{  /*作用于所有：*/
	 margin:0;
	 padding:0;
}



float
/***********************************/
#div3{
	float: left|right|both;
	clear: both; /*清除浮动的不良影响*/
	overflow: hidden|scroll|auto|visible;  /*对父元素框设置*/
}

浮动的特点：
1：浮动找浮动，不浮动找不浮动
2：浮动只影响后面的元素
3：浮动以元素顶部为基准对齐
4：浮动可是实现模式转换（span 设置浮动可以设置宽高）
5：让块级元素在一行显示


case1:要么都用float元素，这样下边部分就不存在脱靶；
case2:用了float，要么设置了高度，则后面跟的就不会脱靶；
case3:用了float元素的，都清除浮动clearfix，则就变成了有高度，不会脱靶。

清除浮动的方式 
/***********************************/
当父容器没有设置高度，里面的盒子没有设置浮动的情况下会将父容器的高度撑开。
一旦父容器中的盒子设置浮动，脱离标准文档流，父容器立马没有高度，下面的盒子会跑到浮动的盒子下面。出现这种情况，我们需要清除浮动。

1：给父容器设置高度
2：通过设置clear:left | right  | both  
3：给父容器设置 overflow:hidden   
4：通过伪元素清除浮动：

单伪类元素标签法： 
.clearfix:after{    /*调用的时候用class="clearfix"*/
       content:"";
       display:block;
       height:0; 
       line-height:0;
       visibily:hidden;
       clear:both;
  }
.clearfix{
  	 zoom:1    　　　为了兼容IE浏览器
 }

双伪类元素标签法：
.clearfix:before, .clearfix:after {
content: "";
display: table;
}
.clearfix:after {
clear: both;
}
.clearfix {
zoom: 1;/*IE678*/
}


 设置定位的盒子居中对齐的步骤：
 /***********************************/
 水平和垂直均可以用这种方法
 1.设置父盒子为相对定位
 2.设置子盒子left为父盒子的宽度一半
 3.设置子盒子左边距为自己宽度的一半

note:
 margin:0 auto;只能让在标准流的盒子居中
 设置盒子左外边距为auto，将盒子冲到右边

 .father{
 	width: 700px;
 	height: 300px;
 	background-color: pink;
 	margin: 0 auto;
 	position: relative;
 }
 .son{
 	width: 400px;
 	height: 100px;
 	background-color: green;
 	position: absolute;
 	
 	left: 50%;
 	margin-left: -200px;/*自己宽度的一半*/
 	bottom: 0;
 }


 设置盒子浏览器居中：
 .absolute{
    position: absolute;
    top:50%;
    left:50%;
    height: 200px;
    width: 200px;
    background-color: #ccc;
    margin-top: -100px;   // 如果不知道其高度和宽度，用：transform: translate3d(-50%,-50%,0); 
    margin-left: -100px;
    /*
	  transform: translate3d(-50%,-50%,0);
    */
}
<div class="absolute"></div>
/*使用translate3d可以开启GPU加速，就不用cpu去从新计算所有点素位置，
开启GPU加速后，GPU自动将这个元素放在一个新的“层”，直接偏移这个“层”来提高渲染速度（个人理解，若有错误欢迎指正）。*/



定位方向：
(设置position之后才会生效)；
不设置position就用margin来设置距离；
/***********************************/
left, top, bottom, right

1.fixed,absolute不占位置; static,relative占位置;
2.display:none不占位置;visibility:hidden占位置;


静态定位：
/***********************************/
#div{
	position: static;  ----这个是默认值，标准流
}


绝对定位：
/***********************************/
#div4{
	position: absolute;
}

特点
※ 给元素设置绝对定位，从浏览器左上角出发设置位置。
※ 给元素设置了绝对定位，元素会不占位置（脱标）
※ 当盒子发生嵌套关系时，如果父集元素没有设置定位，子盒子设置了绝对定位并赋值，子盒子的位置从浏览器左上角出发。
※ 当盒子发生嵌套关系时，如果父集元素设置了绝对定位，子盒子设置了绝对定位并赋值，子盒子的位置从父集元素左上角出发。
※ 绝对定位会将行内元素，转换为行内块。


相对定位：
/***********************************/
#div4{
	position: relative;
}

特点：
※ 给元素设置了相对定位，位置是从自身位置出发。
※ 给元素设置了相对定位，还占据原来的位置（不脱标）。
※ 子绝父相（工作中使用最多），子元素绝对定位，父元素相对定位。  /*子绝父相*/ 
※ 给元素设置相对定位，不能将行内元素转换为行内块元素。



固定定位
/***********************************/
#div4{
	position: fixed;   //网站中悬浮的广告,导航栏
}

特点:
※ 固定定位不占据原来的位置，会脱标。
※ 给元素设置固定定位之后，元素位置从浏览器左上角出发。
※ 可以将行内元素转换为行内块元素。（不推荐，推荐使用display:inline-block;）
.nav{
	position: fixed;
	top:0;
}
.ad1{
	position: fixed;
	left:0;
	top:65px;
}
.ad2{
	position: fixed;
	right:0;
	top:65px;
}


#div5{
	position: static;  /*静态定位，标准方式, 默认此选项*/
}


.cursor{
	cursor: pointer; /*手*/
	cursor: move; /*四角箭头*/
	cursor: text; /*文本广标*/
	cursor: default; /*小箭头*/
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
权重问题：
left比right，权重高。有left又有right的时候，执行left的值。
top比bottom，权重高。有top又有bottom的时候，执行top的值。

半透明：
opacity：0.4；   优点方便。缺点：里面的内容也会半透明。
C3的技术来解决半透明：
background: rgba(0,0,0,0.3);
background: rgba(0,0,0, .3);

定位问题：
定位中，两个定位Static和relative不能给行内元素设置宽高，另外两个abosolute和fix可以。

层级问题: （谁高）
标准流盒子，低于浮动的盒子，浮动的盒子又低于定位的盒子。
定位高于浮动，浮动高于标准流。（高低和占不占位置无关）（除去static之外）。

用法：
1、必须有定位。（除去static之外）。
2、给定z-index的值为层级的值。（不给默认为0）
（层级为0的盒子，也比标准流和浮动高。）
（层级为负数的盒子，比标准流和浮动低。）
（层级不取小数）
（层级一样，后面的盒子比前面的层级高。）
（浮动或者标准流的盒子，后面的盒子比前面的层级高。）

定位中：abselute是不占位置的，relative是占位的。而层级的高低，是和占不占位置没有关系的。

--------- positon/z-index=0;
--------- float:left;
--------- biaozhunliu
--------- positon/z-index=-1;

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

//////////////////////////////////////////////////////////////////////////////////////////

CSS初始化
腾讯：
body,ol,ul,h1,h2,h3,h4,h5,h6,p,th,td,dl,dd,form,fieldset,legend,input,textarea,select{margin:0;padding:0} 
body{font:12px"宋体","Arial Narrow",HELVETICA;background:#fff;-webkit-text-size-adjust:100%;} 
a{color:#2d374b;text-decoration:none} 
a:hover{color:#cd0200;text-decoration:underline} 
em{font-style:normal} 
li{list-style:none} 
img{border:0;vertical-align:middle} 
table{border-collapse:collapse;border-spacing:0} 
p{word-wrap:break-word} 


新浪：
body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div{margin:0;padding:0;border:0;} 
body{background:#fff;color:#333;font-size:12px; margin-top:5px;font-family:"SimSun","宋体","Arial Narrow";}
ul,ol{list-style-type:none;} 
select,input,img,select{vertical-align:middle;} 
a{text-decoration:none;} 
a:link{color:#009;} 
a:visited{color:#800080;} 
a:hover,a:active,a:focus{color:#c00;text-decoration:underline;} 

淘宝：
body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; } 
body, button, input, select, textarea { font:12px/1.5tahoma, arial, \5b8b\4f53; } 
h1, h2, h3, h4, h5, h6{ font-size:100%; } 
address, cite, dfn, em, var { font-style:normal; } 
code, kbd, pre, samp { font-family:couriernew, courier, monospace; } 
small{ font-size:12px; } 
ul, ol { list-style:none; } 
a { text-decoration:none; } 
a:hover { text-decoration:underline; } 
sup { vertical-align:text-top; } 
sub{ vertical-align:text-bottom; } 
legend { color:#000; } 
fieldset, img { border:0; }
button, input, select, textarea { font-size:100%; } 
table { border-collapse:collapse; border-spacing:0; }

京东：
html, body, ul, li, ol, dl, dd, dt, p, h1, h2, h3, h4, h5, h6, form, fieldset, legend, img {
    margin: 0;
    padding: 0;
}
fieldset, img, input, button { 	/*fieldset组合表单中的相关元素*/
    border: none;
    padding: 0;
    margin: 0;
    outline-style: none;
}
ul, ol {
    list-style: none;/*清除列表风格*/
}
input {
    padding-top: 0;
    padding-bottom: 0;
    font-family: "宋体", "微软雅黑";
}
select, input {
    vertical-align: middle;
}
select, input, textarea {
    font-size: 12px;
    margin: 0;
}
textarea {
    resize: none; /*防止多行文本框拖动*/
}
img {
    border: 0; /* 去掉图片低测默认的3像素空白缝隙*/
    vertical-align: middle;
}

table {
    border-collapse: collapse;/*合并外边线*/
}
body {
    font: 12px/150% Arial, Verdana, "\5b8b\4f53";	/*宋体，Unicode，统一码*/
    color: #666;
    background: #fff
}
.clearfix:before, .clearfix:after {
    content: "";
    display: table;
}
.clearfix:after {
    clear: both;
}
.clearfix {
    *zoom: 1; /*IE/7/6*/
}
a {
    color: #666;
    text-decoration: none;
}
a:hover {
    color: #C81623;
}
h1, h2, h3, h4, h5, h6 {
    text-decoration: none;
    font-weight: normal;
    font-size: 100%;
}
s, i, em {				
    font-style: normal;
    text-decoration: none;
}
/*公共类*/
.w {
    /*版心 提取 */
    width: 1210px;
    margin: 0 auto;
}
.fl {
    float: left
}
.fr {
    float: right
}
.al {
    text-align: left
}
.ac {
    text-align: center
}
.ar {
    text-align: right
}
.hide {
    display: none
}



//////////////////////////////////////////////////////////////////////////////////////////

规避脱标流
/***********************************************/
/*设置盒子左外边距为auto，将盒子冲到右边*/
<div class="father">
	<div class="son"></div>
</div>

		.father{
			width: 500px;
			height: 500px;
			background:red;
		}
		.son{
			width: 100px;
			height: 100px;
			background: green;			
			/*设置盒子左外边距为auto，将盒子冲到右边*/
			margin-left:auto;
		}

<div class="father">
	<div class="son"></div>
</div>

/***********************************************/
img{
	vertical-align: middle;/*图片和文字垂直居中对齐*/
}
<div class="box">
	<img src="1.png" alt="">天太热了！hahhahhaha 
</div>


#div3{
	display: none | visible; /*隐藏了之后会从布局中消失*/
	visibility: hidden;  /*隐藏了之后不会从布局中消失*/
}


双飞翼布局：
/***********************************************/
<html>
 <head>
          <meta charset="utf-8">
          <title>test</title>
<style>
	*{
        margin:0;
        padding: 0
    }
    .container{
        width: 800px;
        height: 400px;
        margin-left: 300px;
        border:1px solid #8470FF;
    }
    .main{
        float: left;
        width: 100%;

    }
    .main .main-content{
        margin: 0 210px;
        background-color: yellow;
        height: 300px
    }
    .left{
        width: 200px;
        float: left;
        background-color: green;
        margin-left: -100%;
        height: 200px

    }
    .right{
        width: 200px;
        height: 200px;
        margin-left: -200px;
        float: left;
        background-color: blue;
    }

    </style>
 </head>
<body>
<div class="container">
    <div class="main">
            <div class="main-content">main content</div>
    </div>
    <div class="left">left</div>
    <div class="right">right</div>
</div>
</body>
</html>  



flex布局：
/*****************************************/
http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?^%$
---------------------
.box{
  display: flex;
}
.box{
  display: inline-flex; /* 行内元素也可以使用 */
}
.box{
  display: -webkit-flex; /* Safari webkit内核的浏览器许加前缀*/
  display: flex;
}
div{
    display: flex;
    align-items:center;
}
---------------------
容器属性：
flex-direction
.box {
	flex-direction: row | row-reverse | column | column-reverse;
}
flex-wrap
.box{
	flex-wrap: nowrap | wrap | wrap-reverse;
}
flex-flow
.box{
	flex-flow: <flex-direction> || <flex-wrap>;  /*默认为row nowrap*/
}


justify-content
.box{
	justify-content: flex-start | flex-end | center | space-between | space-around;  /*主轴对齐方式*/
}
align-items   // 这个只能用于flex布局中
.box{
	align-items: flex-start | flex-end | center | baseline | stretch;  /*交叉轴对齐方式*/
}
align-content /*多轴对齐方式，如果只有一根轴线，此属性不生效*/
.box{
	align-content: flex-start | flex-end | center | space-between | space-around |stretch;  
}
---------------------
项目属性：

order: <integer>;    /*排序，默认0，越小越前*/
flex-grow: <number>;      /*放大，默认0，都为1则等分，为2则大一倍*/
flex-shrink: <number>;       /*缩小，默认1，如果空间不足，该项目将缩小*/
flex-basis: <length> | auto;      /*分配占据主轴的空间，默认auto*/
flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]   /*默认0 1 auto; 快捷值：auto(1 1 auto) none(0 0 auto)*/
align-self: auto | flex-start | flex-end | center | baseline | stretch;    /*对齐，默认auto*/

